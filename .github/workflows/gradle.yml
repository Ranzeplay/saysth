# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]
permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-24.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true
      - name: Test Maven Repository Connectivity
        run: |
          echo "Testing connectivity to required Maven repositories..."
          curl -f -s --connect-timeout 10 https://maven.fabricmc.net/ > /dev/null && echo "✓ Fabric Maven accessible" || echo "✗ Fabric Maven access blocked"
          curl -f -s --connect-timeout 10 https://maven.neoforged.net/ > /dev/null && echo "✓ NeoForge Maven accessible" || echo "✗ NeoForge Maven access blocked"  
          curl -f -s --connect-timeout 10 https://repo1.maven.org/maven2/ > /dev/null && echo "✓ Maven Central accessible" || echo "✗ Maven Central access blocked"
          curl -f -s --connect-timeout 10 https://maven.architectury.dev/ > /dev/null && echo "✓ Architectury Maven accessible" || echo "✗ Architectury Maven access blocked"
      - name: Make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: Build
        run: ./gradlew build
      - name: Pack jar
        run: ./gradlew jar
        
      - name: Capture Fabric build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts for Fabric
          path: fabric/build/libs/
      - name: Capture NeoForge build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts for NeoForge
          path: neoforge/build/libs/
